
@{
    ViewBag.Title = "All Customers";
}
<div class="page-header">
    <h3 class="page-title">All Customers</h3>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
            <li class="breadcrumb-item">Customers</li>
            <li class="breadcrumb-item active" aria-current="page">All Customers</li>
        </ol>
    </nav>
</div>
<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th> Customer Name </th>
                            <th> Customer Email </th>
                            <th> Customer Phone </th>
                            <th> Customer Address </th>
                            <th> Customer Dues </th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Model)
                        {
                            <tr>
                                <td>@customer.CustomerName</td>
                                <td>@customer.CustomerEmail</td>
                                <td>+92 @customer.CustomerWhatsapp</td>
                                <td>@TruncateAddress(customer.CustomerAddress)</td>
                                <td>Rs. @customer.CustomerDues</td>
                                <td>
                                    <a href="@Url.Action("UpdateCustomer", "Home", new { CustomerId = customer.CustomerId })" class="btn btn-outline-warning me-2">Edit</a>
                                </td>
                                <td>
                                    <a href="@Url.Action("DeleteCustomer", "Home", new { CustomerId = customer.CustomerId })" class="btn btn-outline-danger">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>`
            </div>
        </div>
    </div>
</div>

@functions{
    public static string TruncateAddress(string address, int maxLength = 20)
    {
        if (string.IsNullOrEmpty(address)) return address;
        return address.Length <= maxLength ? address : address.Substring(0, maxLength) + "...";
    }
}
